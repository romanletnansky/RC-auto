// ---------- Knihovny ----------
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Servo.h>

// ---------- Konstanty pro měření napětí ----------
const float Vref = 5.0;
const float R1 = 10000.0;
const float R2 = 10000.0;

// ---------- Deklarace serv ----------
Servo steeringServo;  // plyn – pin 3
Servo throttleServo;  // řízení – pin 4

// ---------- Struktura přijatých dat ----------
struct Signal {
  byte ch1, ch2, ch3, ch4, ch5, ch6;
};
Signal data;

// ---------- Struktura telemetrie ----------
struct Telemetry {
  float voltage;
};
Telemetry telemetry;

// ---------- Nastavení rádiového spojení ----------
const uint64_t pipeIn = 0xABCDABCD71LL;
RF24 radio(10, 9);  //CE, CSN

// ---------- Stavové proměnné ----------
unsigned long lastRecvTime = 0;
bool signalLost = true;
bool lightsOn = false;
unsigned long stopTime = 0;
int previousThrottle = 127;
unsigned long brakeLightOnTime = 0;
const unsigned long brakeLightDuration = 1000;
unsigned long lastBlinkTime = 0;
bool blinkState = false;

// ---------- Parametry blinkrů ----------
const int turnThreshold = 20;             // odchylka řízení pro aktivaci blinkru
const unsigned long blinkInterval = 300;  // interval blikání

void setup() {
  steeringServo.attach(4); // řízení
  throttleServo.attach(3); //plyn

  pinMode(A0, OUTPUT);  // dálková světla
  pinMode(A1, OUTPUT);  // couvací světlo
  pinMode(A2, OUTPUT);  // levý blinkr
  pinMode(A3, OUTPUT);  // pravý blinkr
  pinMode(A4, OUTPUT);  // přední světlo
  pinMode(6, OUTPUT);   // brzdové světlo

  digitalWrite(A0, LOW);
  digitalWrite(A1, LOW);
  digitalWrite(A2, LOW);
  digitalWrite(A3, LOW);
  digitalWrite(A4, LOW);
  analogWrite(6, 0);

  radio.begin();
  radio.setChannel(100);
  radio.setAutoAck(true);
  radio.enableAckPayload();
  radio.setRetries(5, 15);
  radio.setDataRate(RF24_250KBPS);
  radio.setPALevel(RF24_PA_HIGH);
  radio.openReadingPipe(1, pipeIn);
  radio.startListening();
}

void ResetData() {
  data.ch1 = 127;
  data.ch2 = 127;
  data.ch3 = 127;
  data.ch4 = 127;
  data.ch5 = 127;
  data.ch6 = 127;
}

void recvData() {
  while (radio.available()) {
    radio.read(&data, sizeof(Signal));
    lastRecvTime = millis();
    signalLost = false;

    int raw = analogRead(A5);
    telemetry.voltage = raw * Vref / 1023.0 * (R1 + R2) / R2;
    radio.writeAckPayload(1, &telemetry, sizeof(Telemetry));
  }
}

void loop() {
  recvData();

  if (millis() - lastRecvTime > 3000) {
    ResetData();
    signalLost = true;
  }

  // ---------- Ovládání na dálkovém vysílači ----------
  int throttle = data.ch2 - 127;  // plyn
  int steering = data.ch3 - 127;  // řízení

  if (abs(throttle) < 10) throttle = 0;
  if (abs(steering) < 10) steering = 0;

  int throttlePulse = map(throttle, -127, 127, 2000, 1000);  //změna směru když prohodíme poslední 2 hodnoty
  int steeringPulse = map(steering, -127, 127, 2000, 1000); //změna směru když prohodíme poslední 2 hodnoty

  if (signalLost) {
    throttlePulse = 1500;
    steeringPulse = 1500;
  }

  throttleServo.writeMicroseconds(throttlePulse);
  steeringServo.writeMicroseconds(steeringPulse);

  // ---------- Blinkry a světla ----------
  if (millis() - lastBlinkTime > blinkInterval) {
    lastBlinkTime = millis();
    blinkState = !blinkState;
  }

  if (signalLost) {
    // Při ztrátě signálu blikají oba blinkry a světla
    digitalWrite(A2, blinkState ? HIGH : LOW);
    digitalWrite(A3, blinkState ? HIGH : LOW);
    digitalWrite(A4, blinkState ? LOW : HIGH); // blikání na střídačku
    //analogWrite(6, blinkState ? 0 : 255);
  } else {

    // Blinkry podle řízení
    if (steering < -turnThreshold) {  // vlevo
      digitalWrite(A2, blinkState ? HIGH : LOW);
      digitalWrite(A3, LOW);
    } else if (steering > turnThreshold) {  // vpravo
      digitalWrite(A3, blinkState ? HIGH : LOW);
      digitalWrite(A2, LOW);
    } else {
      digitalWrite(A2, LOW);
      digitalWrite(A3, LOW);
    }

    // ---------- Světla při jízdě ----------
    bool moving = (abs(throttle) > 10);
    if (moving) {
      digitalWrite(A4, HIGH);     // přední světla
      analogWrite(6, 25);         // brzdové světlo slabě (30 %)
      lightsOn = true;
      stopTime = 0;
    } else {
      if (lightsOn) {
        if (stopTime == 0) {
          stopTime = millis();
        } else if (millis() - stopTime > 10000) {
          digitalWrite(A4, LOW);
          analogWrite(6, 0);
          lightsOn = false;
          stopTime = 0;
        }
      }
    }
  }

  // ---------- Couvací světlo ----------
  digitalWrite(A1, data.ch2 > 140 ? HIGH : LOW);

  // ---------- Brzdové světlo ----------
  bool braking = false;
  if (!signalLost) {
    int diff = abs(data.ch2 - previousThrottle);
    if (diff > 15 && data.ch2 > 115 && data.ch2 < 140) {
      braking = true;
    }
    previousThrottle = data.ch2;
  }

// ---------- Dálková světla ----------
if (data.ch5 > 140 && !signalLost) { // jaký kanál spíná na cysílači
  digitalWrite(A0, HIGH);
} else {
  digitalWrite(A0, LOW);
}


  if (braking) {
    analogWrite(6, 255);
    brakeLightOnTime = millis();
  } else if (!signalLost && millis() - brakeLightOnTime > brakeLightDuration) {
    if (lightsOn) {
      analogWrite(6, 77);
    } else {
      analogWrite(6, 0);
    }
  }
}
